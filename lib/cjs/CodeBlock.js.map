{"version":3,"sources":["../../src/CodeBlock.js"],"names":["CodeBlock","props","e","callback","setState","codeStr","target","value","state","nextProps","code","className","editer","language","style","showLineNumbers","cls","preStyle","styles","lineNumberStyle","paddingLeft","enterStyle","Object","assign","hljs","onChange","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;IAEMA,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,qHAAMA,KAAN;AADiB,iGAmBR,UAACC,CAAD,EAAO;AAAA,UACRC,QADQ,GACK,MAAKF,KADV,CACRE,QADQ;;AAEhB,YAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAEH,CAAC,CAACI,MAAF,CAASC;AADN,OAAd,EAEG;AAAA,eAAMJ,QAAQ,CAAC,MAAKK,KAAL,CAAWH,OAAZ,CAAd;AAAA,OAFH;AAGD,KAxBkB;AAEjB,UAAKG,KAAL,GAAa;AACXH,MAAAA,OAAO,EAAG;AADC,KAAb;AAFiB;AAKlB;;;;8CACyBI,S,EAAW;AAAA,UAC3BC,IAD2B,GAClB,KAAKT,KADa,CAC3BS,IAD2B;;AAEnC,UAAIA,IAAI,KAAKD,SAAS,CAACC,IAAvB,EAA6B;AAC3B,aAAKN,QAAL,CAAc;AAAEM,UAAAA,IAAI,EAAED,SAAS,CAACC;AAAlB,SAAd;AACD;AACF;;;wCACmB;AAAA,UACVA,IADU,GACD,KAAKT,KADJ,CACVS,IADU;AAElB,WAAKN,QAAL,mBACK,KAAKI,KAAL,CAAWH,OADhB;AAEEA,QAAAA,OAAO,EAAEK;AAFX;AAID;;;6BAQQ;AAAA;;AAAA,UACCL,OADD,GACa,KAAKG,KADlB,CACCH,OADD;AAAA,wBAEwE,KAAKJ,KAF7E;AAAA,UAECU,SAFD,eAECA,SAFD;AAAA,UAEYC,MAFZ,eAEYA,MAFZ;AAAA,6CAEoBC,QAFpB;AAAA,UAEoBA,QAFpB,qCAE6B,KAF7B;AAAA,0CAEoCC,KAFpC;AAAA,UAEoCA,KAFpC,kCAE0C,EAF1C;AAAA,8CAE8CC,eAF9C;AAAA,UAE8CA,eAF9C,sCAE8D,KAF9D;AAGP,UAAMC,GAAG,GAAG,4BAAW,YAAX,EAAyBL,SAAzB,CAAZ;AACA,UAAMM,QAAQ,GAAGC,MAAM,CAACJ,KAAD,CAAN,IAAiB,EAAlC;AACA,UAAMK,eAAe,GAAGJ,eAAe,GAAG;AAAEK,QAAAA,WAAW,EAAE;AAAf,OAAH,GAAyB,EAAhE;AACA,UAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,QAAQ,CAACO,IAA3B,EAAiCL,eAAjC,CAAnB;AAEA,aACE;AAAK,QAAA,SAAS,EAAEH;AAAhB,SAEIJ,MAAM,IAAI;AACR,QAAA,KAAK,EAAEP,OADC;AAER,QAAA,SAAS,EAAC,WAFF;AAGR,QAAA,KAAK,EAAEgB,UAHC;AAIR,QAAA,QAAQ,EAAE,kBAAAnB,CAAC;AAAA,iBAAI,MAAI,CAACuB,QAAL,CAAcvB,CAAd,CAAJ;AAAA;AAJH,QAFd,EASE,gCAAC,kCAAD;AACE,QAAA,QAAQ,EAAEW,QADZ;AAEE,QAAA,KAAK,EAAEI,QAFT;AAGE,QAAA,eAAe,EAAEF;AAHnB,SAKGV,OALH,CATF,CADF;AAmBD;;;EAtDqBqB,kBAAMC,S;;AAuD7B;eAEc3B,S","sourcesContent":["import React from 'react';\r\nimport classnames from 'classnames';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport * as styles from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport './styles/codeBlock.less';\r\nclass CodeBlock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      codeStr:  ''\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { code } = this.props;\r\n    if (code !== nextProps.code) {\r\n      this.setState({ code: nextProps.code });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { code } = this.props;\r\n    this.setState({\r\n      ...this.state.codeStr,\r\n      codeStr: code\r\n    });\r\n  }\r\n  onChange = (e) => {\r\n    const { callback } = this.props;\r\n    this.setState({\r\n      codeStr: e.target.value\r\n    }, () => callback(this.state.codeStr));\r\n  }\r\n\r\n  render() {\r\n    const { codeStr } = this.state;\r\n    const { className, editer, language='jsx', style='', showLineNumbers=false } = this.props;\r\n    const cls = classnames('precodebox', className);\r\n    const preStyle = styles[style] || '';\r\n    const lineNumberStyle = showLineNumbers ? { paddingLeft: 37 } : {};\r\n    const enterStyle = Object.assign({}, preStyle.hljs, lineNumberStyle)\r\n    \r\n    return (\r\n      <div className={cls}>\r\n        {\r\n          editer && <textarea\r\n            value={codeStr}\r\n            className=\"invisible\"\r\n            style={enterStyle}\r\n            onChange={e => this.onChange(e)}\r\n          />\r\n        }\r\n        <SyntaxHighlighter\r\n          language={language}\r\n          style={preStyle}\r\n          showLineNumbers={showLineNumbers}\r\n        >\r\n          {codeStr}\r\n        </SyntaxHighlighter>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CodeBlock;\r\n"],"file":"CodeBlock.js"}